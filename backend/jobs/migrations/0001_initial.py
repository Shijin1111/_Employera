# Generated by Django 5.2.7 on 2025-10-18 13:02

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('home', 'Home'), ('errands', 'Errands & Delivery'), ('events', 'Events'), ('petcare', 'Pet Care'), ('office', 'Office/Retail')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Job Categories',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('message', models.TextField(blank=True)),
                ('estimated_completion_time', models.IntegerField(blank=True, help_text='Time in minutes', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_team_bid', models.BooleanField(default=False)),
                ('team_members', models.ManyToManyField(blank=True, related_name='team_bids', to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['amount', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location_type', models.CharField(choices=[('onsite', 'On-site'), ('remote', 'Remote')], default='onsite', max_length=20)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('posted_date', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('is_flexible', models.BooleanField(default=False)),
                ('urgency', models.CharField(choices=[('low', 'Low - Flexible timing'), ('medium', 'Medium - Within a week'), ('high', 'High - Within 2-3 days'), ('urgent', 'Urgent - ASAP')], default='medium', max_length=20)),
                ('budget_min', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('budget_max', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('instant_hire_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price for instant hire without bidding', max_digits=10, null=True)),
                ('number_of_workers', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('tools_provided', models.BooleanField(default=True)),
                ('tools_required', models.TextField(blank=True, help_text='Tools worker needs to bring')),
                ('physical_requirements', models.CharField(choices=[('light', 'Light Work'), ('moderate', 'Moderate Physical Work'), ('heavy', 'Heavy Lifting Required')], default='moderate', max_length=50)),
                ('auto_match_enabled', models.BooleanField(default=False)),
                ('auto_match_min_rating', models.DecimalField(decimal_places=1, default=4.0, max_digits=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('auto_match_max_distance', models.IntegerField(default=10, help_text='Maximum distance in km', validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open for Bidding'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('images', models.JSONField(blank=True, default=list)),
                ('is_featured', models.BooleanField(default=False)),
                ('view_count', models.IntegerField(default=0)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_jobs', to=settings.AUTH_USER_MODEL)),
                ('selected_bid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selected_for_job', to='jobs.bid')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.jobcategory')),
            ],
            options={
                'ordering': ['-posted_date'],
            },
        ),
        migrations.AddField(
            model_name='bid',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='jobs.job'),
        ),
        migrations.CreateModel(
            name='JobImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='job_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_images', to='jobs.job')),
            ],
            options={
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('punctuality_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('professionalism_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('overall_rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='jobs.job')),
                ('reviewed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='jobs.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-saved_at'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.jobcategory')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description_template', models.TextField()),
                ('estimated_duration', models.IntegerField(help_text='Duration in minutes')),
                ('suggested_min_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('suggested_max_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('checklist', models.JSONField(blank=True, default=list)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.jobcategory')),
                ('required_skills', models.ManyToManyField(blank=True, to='jobs.skill')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='skills_required',
            field=models.ManyToManyField(blank=True, to='jobs.skill'),
        ),
        migrations.CreateModel(
            name='WorkerAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['job', 'status'], name='jobs_bid_job_id_1f3be1_idx'),
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['worker', 'status'], name='jobs_bid_worker__e73c60_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bid',
            unique_together={('job', 'worker')},
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('job', 'reviewer', 'reviewed_user')},
        ),
        migrations.AlterUniqueTogether(
            name='savedjob',
            unique_together={('user', 'job')},
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['status', 'posted_date'], name='jobs_job_status_b56834_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['employer', 'status'], name='jobs_job_employe_9a6de3_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['category', 'status'], name='jobs_job_categor_2e2729_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workeravailability',
            unique_together={('worker', 'day_of_week', 'start_time')},
        ),
    ]
